name: Test Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

env:
  NODE_VERSION: '18'
  AWS_DEFAULT_REGION: us-east-1
  FORCE_COLOR: 1

jobs:
  test-matrix:
    name: Test Matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['16', '18', '20']
        test-type: ['unit', 'integration']
      fail-fast: false
      
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - run: npm ci
      
      - name: Run Unit Tests
        if: matrix.test-type == 'unit'
        run: |
          npm run test:unit:coverage
          npm run test:unit:lambda1
          npm run test:unit:lambda2
          npm run test:unit:lambda3
          
      - name: Run Integration Tests  
        if: matrix.test-type == 'integration'
        run: |
          docker compose up -d localstack
          timeout 60 bash -c 'until curl -f http://localhost:4566/_localstack/health; do sleep 2; done'
          npm run deploy:localstack
          export ENDPOINT=http://localhost:4566
          npm run verify:localstack
          
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-${{ matrix.node-version }}-${{ matrix.test-type }}
          path: |
            reports/
            *.log
          retention-days: 3

  performance-benchmark:
    name: Performance Benchmark
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
    
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - run: npm ci
      
      - name: Install K6
        run: |
          sudo gpg --no-default-keyring --keyring /usr/share/keyrings/k6-archive-keyring.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
          echo "deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
          sudo apt-get update
          sudo apt-get install k6

      - name: Setup Test Environment
        run: |
          docker compose up -d
          timeout 60 bash -c 'until curl -f http://localhost:4566/_localstack/health; do sleep 2; done'
          npm run setup
          npm start &
          sleep 15

      - name: Run Extended Performance Tests
        run: |
          echo "Running extended performance tests..."
          npm run test:all
          
      - name: Analyze Results
        run: |
          npm run analyze:enhanced
          npm run report:consolidated
          
      - uses: actions/upload-artifact@v4
        with:
          name: performance-benchmark-${{ github.run_number }}
          path: |
            reports/
            *.json
          retention-days: 30

  security-tests:
    name: Security Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Run npm audit
        run: |
          npm audit --audit-level=high --json > security-report.json || true
          
      - name: Run Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: >-
            p/security-audit
            p/secrets
            p/nodejs

      - name: CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: 'javascript'
          
      - uses: github/codeql-action/analyze@v3

  test-report:
    name: Consolidated Test Report
    runs-on: ubuntu-latest
    needs: [test-matrix, performance-benchmark, security-tests]
    if: always()
    
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - run: npm ci
      
      - name: Download All Test Results
        uses: actions/download-artifact@v4
        with:
          path: test-results/
          
      - name: Generate Consolidated Report
        run: |
          npm run report:consolidated
          npm run analyze:enhanced
          
      - name: Publish Test Report
        uses: actions/upload-artifact@v4
        with:
          name: consolidated-test-report-${{ github.run_number }}
          path: |
            reports/consolidated/
            test-results/
          retention-days: 90
